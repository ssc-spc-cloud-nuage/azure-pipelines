parameters:
  - name: layers
    type: object
  - name: serviceConnection
    type: string
  - name: eslzEnvFolder
    type: string
  - name: eslzEnvPool
    type: string


jobs:
- ${{ each layer in parameters.layers }}:  
  - deployment: TerragruntApply_${{ parameters.eslzEnvFolder}}_${{ layer }}
    condition: and(succeeded(), eq(stageDependencies.${{ parameters.eslzEnvFolder}}_Plan.InitJob.outputs['GitDiffTask.RepoChange${{ layer }}'], 'true'))
    environment: ${{ parameters.eslzEnvFolder}}
    pool: 
      name: ${{ parameters.eslzEnvPool}}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - checkout: self
            - bash: |
                if [ ! -d "$(Agent.ToolsDirectory)/.tfenv" ]; then
                git clone --depth=1 https://github.com/ssc-spc-cloud-nuage/tfenv.git $(Agent.ToolsDirectory)/.tfenv
                echo 'export PATH=$(Agent.ToolsDirectory)/.tfenv/bin:$PATH' >> ~/.profile
                $(Agent.ToolsDirectory)/.tfenv/bin/tfenv install 1.5.5
                $(Agent.ToolsDirectory)/.tfenv/bin/tfenv use 1.5.5
                fi

                if [ ! -d "$(Agent.ToolsDirectory)/.tgenv" ]; then
                git clone --depth=1 https://github.com/ssc-spc-cloud-nuage/tgenv.git $(Agent.ToolsDirectory)/.tgenv
                echo 'export PATH=$(Agent.ToolsDirectory)/.tgenv/bin:$PATH' >> ~/.profile
                $(Agent.ToolsDirectory)/.tgenv/bin/tgenv install latest
                $(Agent.ToolsDirectory)/.tgenv/bin/tgenv use latest
                fi

                source ~/.profile
            
              displayName: 'install terraform/terragrunt'
            - task: DownloadBuildArtifacts@1
              name: DownloadPlan
              inputs:
                buildType: current
                downloadType: single
                artifactName: plan_${{ parameters.eslzEnvFolder}}_${{ layer }}
                downloadPath: '$(Agent.TempDirectory)'
            - task: AzureCLI@2
              displayName: 'terragrunt apply'
              inputs:
                azureSubscription: ${{ parameters.serviceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                addSpnToEnvironment: true
                inlineScript: |
                  export ARM_CLIENT_ID=$servicePrincipalId
                  export ARM_OIDC_TOKEN=$idToken
                  export ARM_TENANT_ID=$tenantId
                  export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
                  export ARM_USE_OIDC=true

                  cd $(Build.SourcesDirectory)/landing_zones_*/${{ parameters.eslzEnvFolder}}/${{ layer }}/
                  terragrunt apply -auto-approve $(Agent.TempDirectory)/plan_${{ parameters.eslzEnvFolder}}_${{ layer }}/plan.tfplan
                failOnStderr : true
